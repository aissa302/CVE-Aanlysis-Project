#!/usr/bin/env python3

import re
import json
from tqdm import tqdm
from tools1 import files
from tools1 import preprocessing
import sys

net_cnvd = files.f2l("../data/iot_cnvd_only.txt") 

iot_list = ["Asus RT-N10+", "Huawei Quidway switches", 
            "SerVision HVG Video Gateway", 
            "Cisco 4000 Series",
            "Cisco ASR 1000", 
            "Cisco ISR 1000", 
            "Cisco ISR 4000", 
            "Cisco ISR 900", 
            "Juniper MX Series",
            "Juniper ACX", 
            "Juniper J", 
            "Juniper M", 
            "NETGEAR Nighthawk", 
            "ASUS RT-AX88U", 
            "ASUS RT-AX86U",
            "DIR-645 Wired", 
            "Zhone GPON 2520", 
            "Dell SonicWALL Secure Remote Access", 
            "ASUS RT-AC86U",
            "AirLive BU-2015", 
            "ASUS RT-G32 routers", 
            "Alcatel-Lucent OmniSwitch", 
            "ANTlabs InnGate",
            "Grandstream GXV3611_HD camera", 
            "Actiontec GT784WN modems",
            "TRENDnet WiFi Baby", 
            "Gynoii","Philips In.Sight", 
            "iBaby", "Summer Baby Zoom Wifi Monitor & Internet Viewing System", 
            "Lens Peek-a-View", 
            "Amazon Echo", 
            "Google Home", 
            "Edimax", 
            "August Doorbell", 
            "August Smart", 
            "Kuri Mobile", 
            "Belkin WeMo", 
            "Footbot Air", 
            "Nest Smoke", 
            "Nest T3021US", 
            "Philips Hue", 
            "Bitdefender BOX", 
            "Ring Doorbell", 
            "WeMo Insight", 
            "Logitech Harmony", 
            "Particle Photon", 
            "NETGEAR Orbi", 
            "Nespresso Prodigio", 
            "Netatmo", 
            "Samsung SmartThings", 
            "Apple Watch", 
            "Google Cardboard", 
            "Samsung Gear",
            "FreeRTOS", 
            "Cisco Catalyst", 
            "Cisco Nexus", 
            "NX-OS", 
            "Cisco IOS", 
            "D-Link", 
            "TP-Link", 
            "Microcontroller", 
            "System-on-Chip (SoC)", 
            "Real-time operating system", 
            "CompactLogix", 
            "ControlLogix", 
            "MicroLogix",
            "PLC-5", 
            "SLC 500", 
            "Apple Watch Series 3", 
            "Samsung Galaxy Watch Active2",
            "Garmin Vivoactive 3",
            "Fitbit Versa 2",
            "Amazfit Bip S",
            "Fitbit Inspire 2",
            "Garmin Vivosmart 4",
            "Xiaomi Mi Smart Band 5",
            "Huawei Band 4 Pro",
            "Polar A370",
            "Apple AirPods",
            "Samsung Galaxy Buds",
            "Jabra Elite 65t",
            "Sony WF-SP800N",
            "Bose SoundSport Wireless",
            "Philips Hue Smart Bulbs",
            "Nest Learning Thermostat",
            "August Smart Lock Pro",
            "Amazon Echo Dot",
            "Google Nest Mini",
            "Apple HomePod Mini",
            "Sonos One",
            "Bose Home Speaker 300",
            "Abbott FreeStyle Libre",
            "Medtronic MiniMed 670G",
            "Fitbit Sense",
            "Omron HeartGuide",
            "Withings BPM Connect",
            "Nintendo Switch Lite",
            "Sony PlayStation Vita",
            "Nintendo 3DS XL",
            "Sega Game Gear Micro",
            "Neo Geo Pocket Color",
            "Amazon Kindle Paperwhite",
            "Kobo Clara HD",
            "Barnes & Noble Nook GlowLight Plus",
            "PocketBook Touch Lux 5",
            "Onyx Boox Poke3",
            "Canon PowerShot SX620 HS",
            "Sony Cyber-shot DSC-W800",
            "Nikon COOLPIX W150",
            "Fujifilm FinePix XP140",
            "Olympus Tough TG-6",
            "Garmin eTrex 10",
            "TomTom Go Basic",
            "Magellan RoadMate 6630T-LM",
            "Garmin DriveSmart 55",
            "Rand McNally OverDryve 7 RV",
            "MQTT", "NanoMQ", "Nexx Smart Home",
            "Bluetooth LE", "UART", "LoRaWAN", "ZigBee", "XBee", "Modbus",
            "Embedded Linux", "VxWorks", "ThreadX", "Nucleus RTOS", "RIOT-OS",
            "RIOT", "RIOT OS", "mbed OS", "camera", "printer"]

ics_list = ['SIMATIC S7-1200', 'SIMATIC S7-1500', 'SIMATIC S7-300', 'SIMATIC S7-400' 'SANTIS 50', 'Wind River', 'RTOS',
            'SIMATIC S7-200', 'Modicon M221', 'Modicon M241', 'Modicon M251', 'Modicon M340', 'Modicon Quantum',
            'FX Series', 'L Series', 'Q Series', 'iQ-R Series', 'iQ-F Series', 'AC500', 'AC500-eCo', 'AC500-S',
            'AC500-XC', 'CP1E', 'CP1L', 'CP1H', 'CJ2M', 'CJ2H','GE Digital Energy MDS PulseNET', 'ABB PCM600', 
            'OneTouch Ping devices', 'ABB MicroSCADA', 'ABB CP400', 'AC2000', 'SDM600', 'Appliance 3000']

connected_cars = ['Hyundai', 'BMW', 'Tesla', 'Jeep', 'Ford', 'Nissan', 'Toyota', 'Volkswagen',
              'General Motors', 'Audi', 'Mercedes-Benz', 'Subaru', 'Lexus', 'Fiat Chrysler', 
              'automobile', 'infotainment']

es_dic ={
    "Asus RT-N10+": {"cves": []}, "Huawei Quidway switches": {"cves": []}, "SerVision HVG Video Gateway": {"cves": []},
    "Cisco 4000 Series": {"cves": []}, "Cisco ASR 1000": {"cves": []}, "Cisco ISR 1000": {"cves": []},
    "Cisco ISR 4000": {"cves": []}, "Cisco ISR 900": {"cves": []}, "Juniper MX Series": {"cves": []},
    "Juniper ACX": {"cves": []}, "Juniper J": {"cves": []}, "Juniper M": {"cves": []}, "NETGEAR Nighthawk": {"cves": []},
    "ASUS RT-AX88U": {"cves": []}, "ASUS RT-AX86U": {"cves": []}, "DIR-645 Wired": {"cves": []}, "Zhone GPON 2520": {"cves": []},
    "Dell SonicWALL Secure Remote Access": {"cves": []}, "ASUS RT-AC86U": {"cves": []}, "AirLive BU-2015": {"cves": []},
    "ASUS RT-G32 routers": {"cves": []}, "Alcatel-Lucent OmniSwitch": {"cves": []}, "ANTlabs InnGate": {"cves": []},
    "Grandstream GXV3611_HD camera": {"cves": []}, "Actiontec GT784WN modems": {"cves": []}, "TRENDnet WiFi Baby": {"cves": []},
    "Gynoii": {"cves": []}, "Philips In.Sight": {"cves": []}, "iBaby": {"cves": []},
    "Summer Baby Zoom Wifi Monitor & Internet Viewing System": {"cves": []}, "Lens Peek-a-View": {"cves": []}, "Amazon Echo": {"cves": []},
    "Google Home": {"cves": []}, "Edimax": {"cves": []}, "August Doorbell": {"cves": []},"August Smart": {"cves": []},
    "Kuri Mobile": {"cves": []}, "Belkin WeMo": {"cves": []}, "Footbot Air": {"cves": []}, "Nest Smoke": {"cves": []},
    "Nest T3021US": {"cves": []}, "Philips Hue": {"cves": []}, "Bitdefender BOX": {"cves": []}, "Ring Doorbell": {"cves": []},
    "WeMo Insight": {"cves": []}, "Logitech Harmony": {"cves": []}, "Particle Photon": {"cves": []}, "NETGEAR Orbi": {"cves": []},
    "Nespresso Prodigio": {"cves": []}, "Netatmo": {"cves": []},
    "Samsung SmartThings": {"cves": []}, "Apple Watch": {"cves": []},"Google Cardboard": {"cves": []},
    "Samsung Gear": {"cves": []}, "FreeRTO": {"cves": []}, "Cisco Catalyst": {"cves": []}, "Cisco Nexus": {"cves": []},
    "NX-OS": {"cves": []}, "Cisco IOS": {"cves": []}, "D-Link": {"cves": []}, "TP-Link": {"cves": []},
    "Microcontroller": {"cves": []}, "System-on-Chip (SoC)": {"cves": []}, "Real-time operating system": {"cves": []},
    "CompactLogix": {"cves": []}, "ControlLogix": {"cves": []}, "MicroLogix": {"cves": []}, "PLC-5": {"cves": []},
    "SLC 500": {"cves": []}, "Apple Watch Series 3": {"cves": []}, "Samsung Galaxy Watch Active2": {"cves": []},
    "Garmin Vivoactive 3": {"cves": []}, "Fitbit Versa 2": {"cves": []}, "Amazfit Bip S": {"cves": []}, "Fitbit Inspire 2": {"cves": []},
    "Garmin Vivosmart 4": {"cves": []}, "Xiaomi Mi Smart Band 5": {"cves": []}, "Huawei Band 4 Pro": {"cves": []},
    "Polar A370": {"cves": []}, "Apple AirPods": {"cves": []}, "Samsung Galaxy Buds": {"cves": []}, "Jabra Elite 65t": {"cves": []},
    "Sony WF-SP800N": {"cves": []}, "Bose SoundSport Wireless": {"cves": []}, "Philips Hue Smart Bulbs": {"cves": []},
    "Nest Learning Thermostat": {"cves": []}, "August Smart Lock Pro": {"cves": []}, "Amazon Echo Dot": {"cves": []},
    "Google Nest Mini": {"cves": []}, "Apple HomePod Mini": {"cves": []}, "Sonos One": {"cves": []},
    "Bose Home Speaker 300": {"cves": []}, "Abbott FreeStyle Libre": {"cves": []}, "Medtronic MiniMed 670G": {"cves": []},
    "Fitbit Sense": {"cves": []}, "Omron HeartGuide": {"cves": []}, "Withings BPM Connect": {"cves": []},
    "Nintendo Switch Lite": {"cves": []}, "Sony PlayStation Vita": {"cves": []}, "Nintendo 3DS XL": {"cves": []},
    "Sega Game Gear Micro": {"cves": []}, "Neo Geo Pocket Color": {"cves": []}, "Amazon Kindle Paperwhite": {"cves": []},
    "Kobo Clara HD": {"cves": []}, "Barnes & Noble Nook GlowLight Plus": {"cves": []}, "PocketBook Touch Lux 5": {"cves": []},
    "Onyx Boox Poke3": {"cves": []}, "Canon PowerShot SX620 HS": {"cves": []}, "Sony Cyber-shot DSC-W800": {"cves": []},
    "Nikon COOLPIX W150": {"cves": []}, "Fujifilm FinePix XP140": {"cves": []}, "Olympus Tough TG-6": {"cves": []},
    "Garmin eTrex 10": {"cves": []}, "TomTom Go Basic": {"cves": []}, "Magellan RoadMate 6630T-LM": {"cves": []},
    "Garmin DriveSmart 55": {"cves": []}, "Rand McNally OverDryve 7 RV": {"cves": []},
    "SIMATIC S7-1200": {"cves": []}, "SIMATIC S7-1500": {"cves": []}, "SIMATIC S7-300": {"cves": []},
    "SIMATIC S7-400": {"cves": []}, "SANTIS 50": {"cves": []}, "Wind River": {"cves": []},
    "RTOS": {"cves": []}, "SIMATIC S7-200": {"cves": []}, "Modicon M221": {"cves": []}, "Modicon M241": {"cves": []},
    "Modicon M251": {"cves": []}, "Modicon M340": {"cves": []}, "Modicon Quantum": {"cves": []},
    "FX Series": {"cves": []}, "L Series": {"cves": []}, "Q Series": {"cves": []}, "iQ-R Series": {"cves": []},
    "iQ-F Series": {"cves": []}, "AC500": {"cves": []}, "AC500-eCo": {"cves": []}, "AC500-S": {"cves": []},
    "AC500-XC": {"cves": []}, "CP1E": {"cves": []}, "CP1L": {"cves": []}, "CP1H": {"cves": []},
    "CJ2M": {"cves": []}, "CJ2H": {"cves": []}, "GE Digital Energy MDS PulseNET": {"cves": []},
    "ABB PCM600": {"cves": []}, "OneTouch Ping devices": {"cves": []}, "ABB MicroSCADA": {"cves": []},
    "ABB CP400": {"cves": []}, "AC2000": {"cves": []}, "SDM600": {"cves": []},"Appliance 3000": {"cves": []},
    "Hyundai": {"cves": []}, "BMW": {"cves": []}, "Tesla": {"cves": []}, "Jeep": {"cves": []},
    "Ford": {"cves": []}, "Nissan": {"cves": []}, "Toyota": {"cves": []}, "Volkswagen": {"cves": []},
    "General Motors": {"cves": []}, "Audi": {"cves": []}, "Mercedes-Benz": {"cves": []},
    "Subaru": {"cves": []}, "Lexus": {"cves": []}, "Fiat Chrysler": {"cves": []},
    "automobile": {"cves": []}, "infotainment": {"cves": []}, 'android': {'cves': []}, 'Mobile phone': {'cves': []}, 
    'smart phone': {'cves': []}, 'samsung mobile': {'cves': []}, 'Apple iOS': {'cves': []}, 'samsung galaxy': {'cves': []}, 
    'Siemens SPCanywhere application': {'cves': []}, 'Siemens HomeControl': {'cves': []}
    }

nes_list = ['Windows Desktop', 'Windows 7','Windows 8', 'Windows 10', 'Windows 11', 'WordPress', 
            'Adobe Flash Player', 'Apple OS X', 'OS X', 'Google Chrome', 'Mozilla Fire Fox', 'Mozilla Firefox', 
            'HangFire', 'Grafan', 'Zydis', 'Jupyter Notebooks', 'Minio console', 'Microsoft office', 'Microsoft word',
            'Microsoft excel', 'Visual Studio', 'Microsoft OneNote', 'Microsoft Exchange',
            'Pydio Cells', 'Apache', 'Kirby', 'baserCMS', 'XAMPP', 'OpenStack', 'Wireshark', 'Metasploit',
            'Xen', 'Nmap', 'Opera Mini', 'Fedora', 'Red Hat Enterprise' , 'Brave Browser', 'Google Map', 'Google Earth',
            'Google Doc', 'Sendmail', 'Chromium', 'Bentley View', 'OpenCV', 'Image Magick', 'EMC', 'Sun Solaris', 'VirtualBox',
            'Django', 'Moodle', 'JBoss', 'Kallithea', "Windows Bluetooth Driver", "Dell XPS 13", "Dell PowerEdge", "HPE ProLiant",
            "IBM System x", "Huawei FusionServer", ]

nes_dic = {"Windows Desktop": {"cves": []}, "Windows 7": {"cves": []}, "Windows 8": {"cves": []}, "Windows 10": {"cves": []},
            "Windows 11": {"cves": []}, "WordPress": {"cves": []}, "Adobe Flash Player": {"cves": []},
            "Apple OS X": {"cves": []}, "OS X": {"cves": []}, "Google Chrome": {"cves": []}, "Mozilla Fire Fox": {"cves": []},
            "Mozilla Firefox": {"cves": []}, "HangFire": {"cves": []}, "Grafan": {"cves": []}, "Zydis": {"cves": []},
            "Jupyter Notebooks": {"cves": []}, "Minio console": {"cves": []}, "Microsoft office": {"cves": []},
            "Microsoft word": {"cves": []}, "Microsoft excel": {"cves": []}, "Visual Studio": {"cves": []},
            "Microsoft OneNote": {"cves": []}, "Microsoft Exchange": {"cves": []}, "Pydio Cells": {"cves": []},
            "Apache": {"cves": []}, "Kirby": {"cves": []}, "baserCMS": {"cves": []}, "XAMPP": {"cves": []},
            "OpenStack": {"cves": []}, "Wireshark": {"cves": []}, "Metasploit": {"cves": []}, "Xen": {"cves": []},
            "Nmap": {"cves": []}, "Opera Mini": {"cves": []}, "Fedora": {"cves": []}, "Red Hat Enterprise": {"cves": []},
            "Brave Browser": {"cves": []}, "Google Map": {"cves": []}, "Google Earth": {"cves": []},
            "Google Doc": {"cves": []}, "Sendmail": {"cves": []},  "Chromium": {"cves": []},
            "Bentley View": {"cves": []}, "OpenCV": {"cves": []}, "Image Magick": {"cves": []},
            "EMC": {"cves": []}, "Sun Solaris": {"cves": []}, "VirtualBox": {"cves": []},
            "Django": {"cves": []}, "Moodle": {"cves": []}, "JBoss": {"cves": []}, "Kallithea": {"cves": []}}

mobilelist = ['android', 'Mobile phone', 'smart phone', 'samsung mobile', 'Apple iOS', 'samsung galaxy', 'Siemens SPCanywhere application','Siemens HomeControl']
es_list = connected_cars+iot_list+ics_list+mobilelist
#non_parsed = open("iot_cnvd_none_parsed_cves.txt", "w+")
def extraction(wordlist, diclist):
    # loop over all files in datapath and open them one by one.
    for text in net_cnvd:   
        for word in wordlist:
            if re.search(r'\b'+word.lower()+r'\b', text.lower()):
                #foundcvesdicw[word]['cves'].append(cve_id)
                diclist[word]['cves'].append(text)
                break
    return diclist


def main():
    es_cves = []
    es_diclist = {}
    nes_cves = []
    nes_diclist = {}

    print("[+] extracting ES vulnerabilities...")
    es_diclist = extraction(es_list, es_dic)
    with open("../data/iot_es_diclist_cnvd_2.json", "w+") as fp:
    	json.dump(es_diclist, fp)
    fp.close()
    
    print("[+] extracting NES vulnerabilities...")
    nes_diclist = extraction(nes_list, nes_dic)
    with open("../data/iot_nes_diclist_cnvd_2.json", "w+") as fp2:
    	json.dump(nes_diclist, fp2)
    fp2.close()
    
    for item in es_diclist:
        cves = es_diclist[item]['cves']
        es_cves.extend(cves)

    print("[+] Number of ES CVEs is before {}".format(len(es_cves)))
    es_cves = list(dict.fromkeys(es_cves))
    files.save_list_to_file(es_cves, "../data/iot_es_cnvd2.txt")
    #tools.files.info(es_diclist)
    es_data = preprocessing.adjust_variation(es_diclist)
    files.save_list_to_file(es_data, "../data/iot_es_cnvd_data_adjusted2.txt")

    for item in nes_diclist:
        cves = nes_diclist[item]['cves']
        nes_cves.extend(cves)

    nes_cves = list(dict.fromkeys(nes_cves))
    print("[+] Number of NES CVEs is {}".format(len(nes_cves)))
    files.save_list_to_file(nes_cves, "../data/iot_nes_cnvd2.txt")
    nes_data = preprocessing.adjust_variation(nes_diclist)
    files.save_list_to_file(nes_data, "../data/iot_nes_cnvd_data_adjusted2.txt")

if __name__ == "__main__":
    main()
